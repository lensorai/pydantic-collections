[tool.poetry]
name = "lensor-pydantic"
version = "0.1.0"
description = "Lensor Pydantic"
authors = ["lensorai <nasir.shah@pon.com>"]
readme = "README.md"
homepage = "https://github.com/lensorai/pydantic-collections"
repository = "https://github.com/lensorai/pydantic-collections"
documentation = "https://lensor-pydantic.readthedocs.io"

[tool.poetry.urls]
Changelog = "https://github.com/lensorai/pydantic-collections/releases"

[tool.poetry.dependencies]
python = ">=3.7,<3.11"
sentry-sdk = ">=1.3.0"
nox = "^2023.4.22"

[tool.poetry.dev-dependencies]
Pygments = ">=2.10.0"
black = ">=21.10b0"
coverage = { extras = ["toml"], version = ">=6.2" }
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.9.2"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
isort = ">=5.10.1"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pre-commit-hooks = ">=4.1.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
typeguard = ">=2.13.3"
xdoctest = { extras = ["colors"], version = ">=0.15.10" }
psycopg2 = { version = "2.9.7" }
ruff = "^0.0"

[tool.black]
line-length = 99
target-version = ['py37', 'py38', 'py39']
skip-string-normalization = true
experimental-string-processing = true
verbose = true

[tool.poetry.scripts]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
#source = ["lensor"]


[tool.coverage.report]
show_missing = true
fail_under = 80

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
disable_error_code =['no-untyped-call','import-untyped']

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[build-system]
requires = ["poetry-core>=1.4.2"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "lensor"
url = "https://pypicloud.prod.lensor.ai/simple"
secondary = true
